

TODO:
	- Optimize treatment of role composition hierarchy. The current implementation generates
	too many new role compositions in role saturation, that can be reduced.
	
	- Optimize the preprocessing of disjointness axioms. The current implementation introduces
	n^2 new subclass axioms for a disjointness axiom containing n concepts.
	
	- Nominals generated from ABox individuals during preprocessing are kept and treated separately. 
	Is this a problem in saturation?
	
	- check all loops with MAP_ITERATOR_NEXT. the condition of the loop should be while (c != KEY_NOT_FOUND) 
	--> mostly done, check once more
	
	- convert dynamic_hash_table also to store uint32_t? Used in the Set.
	--> done
	
	- Set and Queue (in role saturation) store void*. Should be converted to Id-Type (uint32_t)
	--> done
	
	- Why is hash_map->buckets (backwards) linked list? Is just an array of HashMapElement not better? (Reimplement)
	--> already considered.
	
	- TODO in role_saturation (line 143). Shouldn't new_composition be enqueued as well?